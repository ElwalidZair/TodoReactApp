{"version":3,"sources":["logo.svg","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","task","setTask","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","Todo","todos","map","todo","TodoList","setTodos","newTodos","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAe,I,0BCwCAA,MArCf,SAAkBC,GAAO,MAGGC,mBAAS,IAHZ,mBAGdC,EAHc,KAGRC,EAHQ,KAqBrB,OAEI,uBAAMC,UAAY,YAAYC,SAdb,SAAAC,GAEjBA,EAAEC,iBAEFP,EAAMK,SAAS,CACXG,GAAGC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnBC,KAAKV,IAGTC,EAAQ,KAKR,UACI,uBACIU,KAAO,OACPC,YAAc,OACdC,MAAOb,EACPc,KAAK,OACLZ,UAAU,aACVa,SAzBS,SAAAX,GACjBH,EAAQG,EAAEY,OAAOH,UA0Bb,wBAAQX,UAAU,cAAlB,qB,OCfGe,MAff,SAAcnB,GAEV,OAAOA,EAAMoB,MAAMC,KAAI,SAACC,GAAD,OACnB,sBAAKlB,UAAY,OAAjB,UACI,oBAAIA,UAAY,UAAhB,SACKkB,EAAKV,OAEV,uBAAMR,UAAY,UAAlB,UACI,cAAC,IAAD,IACA,cAAC,IAAD,cCiBDmB,MA3Bf,WAAoB,MAGUtB,mBAAS,IAHnB,mBAGTmB,EAHS,KAGFI,EAHE,KAkBhB,OACI,gCACI,6CACA,cAAC,EAAD,CAAUnB,SAhBF,SAAAiB,GACZ,GAAIA,EAAKV,KAAT,CAIA,IAAMa,EAAQ,CAAIH,GAAJ,mBAAaF,IAE3BI,EAASC,GACTC,QAAQC,IAAIL,OASR,cAAC,EAAD,CAAMF,MAASA,QCbZQ,MATf,WAEE,OACE,qBAAKxB,UAAU,WAAf,SACE,cAAC,EAAD,OCISyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.457f0919.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react'\r\nimport TodoList from './TodoList'\r\n\r\nfunction TodoForm(props) {\r\n\r\n    //declaring state variable which we will call task\r\n    const [task, setTask] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        setTask(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({ \r\n            id:Math.floor(Math.random() * 200),\r\n            text:task\r\n        });\r\n\r\n        setTask('');\r\n    }\r\n\r\n    return (\r\n\r\n        <form className = 'todo-form' onSubmit={handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                placeholder = \"Todo\"\r\n                value={task}\r\n                name=\"text\"\r\n                className=\"todo-input\"\r\n                onChange = {handleChange}\r\n            />\r\n            <button className=\"todo-button\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React ,{useState} from 'react';\r\n\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport {AiFillEdit} from 'react-icons/ai';\r\n\r\nfunction Todo(props){\r\n\r\n    return props.todos.map((todo)=>(\r\n        <div className = \"list\">\r\n            <h3 className = \"element\">\r\n                {todo.text}\r\n            </h3>\r\n            <span className = \"element\">\r\n                <AiOutlineClose />\r\n                <AiFillEdit />\r\n            </span>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo;","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n\r\n    //declaring state variable which we will call todos\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo =>{       //add a tasks\r\n        if(!todo.text){\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n        console.log(todo);\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <h1>tasks to do</h1>\r\n            <TodoForm onSubmit = {addTodo}/>\r\n            <Todo todos = {todos} ></Todo>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default TodoList\r\n","import logo from './logo.svg';\nimport './App.css';\nimport TodoList from './components/TodoList.js'\n\nfunction App() {\n  const name = \"walid\";\n  return (\n    <div className=\"todo-app\">\n      <TodoList></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}